name: Provision stats application using ECS

on:
  pull_request:
    branches: [ main ]

env:
  TERRAFORM_VERSION : 1.5.4
  AWS_REGION: us-east-1

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  apply-preconfigured-infrastructure:
     uses: ./.github/workflows/terraform.yaml
     with:
       terraform-version: $TERRAFORM_VERSION
       terraform-directory: tf/preconfigured

  get-ecr-repositories-urls:
    runs-on: ubuntu-latest
    needs: apply-preconfigured-infrastructure
    outputs:
      matrix: ${{ steps.repositories.outputs.matrix }}
    steps:
      - name: create matrix to store repository urls
        env:
          terraform_json_output: ${{ needs.apply-preconfigured-infrastructure.outputs.terraform-outputs }}
        id: repositories
        run: |
          repositories=$(echo $terraform_json_output | jq -c .repository_urls.value)
          echo "matrix=$(jq -cn --argjson repos "$repositories" '{include: $repos}')" >> $github_output
        continue-on-error: true

  build-app-and-containers:
    needs: get-ecr-repositories-urls
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get-ecr-repositories-urls.outputs.matrix) }}
    env:
      WORK_DIR: ${{ matrix.name == 'stats-frontend' && 'sys-stats' || 'api' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::478200436028:role/github-action-assume-role-with-action
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ matrix.name }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ${{ env.WORK_DIR }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy-application-ecs:
    uses: ./.github/workflows/terraform.yaml
    with:
      terraform-version: $TERRAFORM_VERSION
      terraform-directory: tf
      terraform-variables-path: environments/dev
      terraform-variables: "application_version=${{ github.sha }}"

  test-endpoint:
    runs-on: ubuntu-latest
    needs: deploy-application-ecs
    steps:
      - name: test application load balancer url
        env:
          terraform_json_output: ${{ needs.deploy-application-ecs.outputs.terraform-outputs }}
        run: |
          url=$(echo $terraform_json_output | jq -c .service_url.value)
          curl "$url"
